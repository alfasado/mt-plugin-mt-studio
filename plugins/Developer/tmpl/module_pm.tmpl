package <mt:var name="plugin_id">::<mt:if name="plugin_type" eq="tag">Tags</mt:if><mt:if name="plugin_type" eq="callback">Callbacks</mt:if><mt:if name="plugin_type" eq="method"><mt:var name="module_id"></mt:if><mt:if name="plugin_type" eq="task">Tools</mt:if><mt:if name="plugin_type" eq="bootstrap">App</mt:if><mt:if name="plugin_type" eq="endpoint">DataAPI</mt:if>;

use strict;
use warnings;
<mt:if name="plugin_type" eq="endpoint">
use MT::DataAPI::Endpoint::Common;
use MT::DataAPI::Resource;
</mt:if>
<mt:if name="plugin_type" eq="task">sub _do_task {
    my $app = MT->instance;
    my $component = MT->component( '<mt:var name="plugin_id">' );
    my $tasks = <mt:var name="task_settings_name">();
    my %task_names;
    for my $key ( keys %$tasks ) {
        $task_names{ $key } = $tasks->{ $key }->{ priority },
    }
    my @tl = MT::Util::offset_time_list( time, undef );
    my $current_ts = sprintf '%04d%02d%02d%02d%02d%02d', $tl[5]+1900, $tl[4]+1, @tl[3,2,1,0];
    for my $key ( sort { $task_names{ $a } <=> $task_names{ $b } || $b cmp $a } keys %task_names ) {
        my $session_key = 'plugin-task-' . lc( '<mt:var name="plugin_id">' ) . '-' . $key;
        my $sess = MT->model( 'session' )->get_by_key( { id => $session_key, kind => '_D' } );
        $sess->start( time() );
        $sess->save or die $sess->errstr;
        if ( $sess->email && $sess->email == 1 ) {
            next;
        }
        my $run;
        my $job = $tasks->{ $key };
        my $interval = $job->{ interval };
        next if ( $interval > 6 );
        my $lastrun_on = $sess->name;
        if (! $lastrun_on ) {
            $lastrun_on = '19700101000000';
        }
        my $nextrun_on = $job->{ nextrun_on };
        if ( $interval == 1 ) {
            # Every time
            $run = 1;
        } elsif ( $interval == 2 ) {
            # One time
            if ( $nextrun_on ) {
                if ( $nextrun_on <= $current_ts ) {
                    $run = 1;
                } else {
                    next;
                }
            }
        } elsif ( $interval == 3 ) {
            # Hourly
            my $ymdh = substr( $current_ts, 0, 10 );
            my $l_ymdh = substr( $lastrun_on, 0, 10 );
            if ( $ymdh == $l_ymdh ) {
                next;
            }
            my $ms = substr( $current_ts, 10, 4 );
            my $r_ms = substr( $nextrun_on, 10, 4 );
            if ( $r_ms <= $ms ) {
                $run = 1;
            } else {
                next;
            }
        } else {
            # Daily = 4, Weekly = 5, Monthly = 6
            my $ymd = substr( $current_ts, 0, 8 );
            my $l_ymd = substr( $lastrun_on, 0, 8 );
            if ( $ymd == $l_ymd ) {
                next;
            }
            my $hms = substr( $current_ts, 8, 6 );
            my $r_hms = substr( $nextrun_on, 8, 6 );
            if ( $r_hms <= $hms ) {
                # $run = 1;
            } else {
                next;
            }
            my $detail = $job->{ detail };
            if ( $interval == 4 ) {
                $run = 1;
            } else {
                if (! $detail ) {
                    next;
                }
                my @details = split( /,/, $detail );
                if ( $interval == 5 ) {
                    my $wd = MT::Util::wday_from_ts( substr( $current_ts, 0, 4 ),
                                substr( $current_ts, 4, 2 ), substr( $current_ts, 6, 2 ) );
                    for my $d ( @details ) {
                        $d = MT::Util::trim( $d );
                        if ( $d eq $wd ) {
                            $run = 1;
                            last;
                        }
                    }
                    if (! $run ) {
                        next;
                    }
                } elsif ( $interval == 6 ) {
                    my $day = substr( $current_ts, 6, 2 );
                    $day = $day + 0;
                    for my $d ( @details ) {
                        $d = MT::Util::trim( $d );
                        $d = lc( $d );
                        if ( $d eq 'last' ) {
                            my ( $start, $end ) = MT::Util::start_end_month( $current_ts );
                            $d = substr( $end, 6, 2 );
                        }
                        $d = $d + 0;
                        if ( $d == $day ) {
                            $run = 1;
                            last;
                        }
                    }
                    if (! $run ) {
                        next;
                    }
                }
            }
        }
        if (! $run ) {
            next;
        }
        my $freq = $tasks->{ $key }->{ code_ref };
        my $out = $freq->( @_ );
        my $title = $job->{ title };
        # if (! Encode::is_utf8( $title ) ) {
        #     Encode::_utf8_on( $title );
        # }
        my $message = $component->translate( '[_1]\'s Scheduled Task were run : [_2]',
            $component->name, $component->translate( $title ) );
        my $log = {
                message => $message,
                class => $component->name,
                level => 1,
                metadata => $out,
        };
        $app->log( $log );
        $sess->name( $current_ts );
        if ( $interval == 2 ) {
            $sess->email( 1 ); # Finished Task
        }
        $sess->save or die $sess->errstr;
    }
    return 1;
}
</mt:if><mt:var name="plugin_handler">

1;